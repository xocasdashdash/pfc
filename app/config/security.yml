security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_UAH_STAFF_PAS: ROLE_UAH_STUDENT
        ROLE_UAH_STAFF_PDI: ROLE_UAH_STUDENT
        ROLE_UAH_ADMIN: [ROLE_UAH_STAFF_PAS,ROLE_UAH_STAFF_PDI]
        ROLE_UAH_SUPER_ADMIN: [ROLE_UAH_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    providers:
        # the order is important here
        OpenIdUserManager:
            id: UAH.GestorActividades.OpenIdUserManager # the name of the service
        # keep your database provider below! it may look like this:        
        database:
            entity: { class: UAHGestorActividadesBundle:User, property: username }
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:    ^/
            logout:     true
            anonymous:  true
            form_login:
                post_only: false                
            fp_openid:
                login_path: /login
                check_path: /login_check_openid
                create_user_if_not_exists: true # so createUserFromIdentity method will be called
                provider: OpenIdUserManager # cf below
                # previously we used 'contact/email' field. So we have to request it!
                # Please note that all OpenID providers may not be able to provide all fields.
                # check the desired provider documentation
                required_attributes:
                    - contact/email     
                    - namePerson/first
                    - namePerson/prefix
                success_handler: UahAuthenticationHandler

    
    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secured_area, role: IS_AUTHENTICATED_OPENID }    

    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
